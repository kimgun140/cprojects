CTE(COMMON TABLE EXPRESSION)
WITH 문을 이용 하여 특정 쿼리를 하나의 임식적인 TABLE로 만들어
이를 반복적으로 불러올 수 있도록 합니다. 서브쿼리와 유사하지만 서브쿼리에 비해 쿼리에서의 
위치적 제약을 덜받는다. 


WITH TABLE이름 AS QUERY


VIEW로 만들어진 테이블은 반복해서 불러와 사용할 수 있으며, CTE처럼 매번 쿼리를 작성해줄 필요가 없다. 
물론 테이블의 정보는 실제 저장되어 가져와 사용하게 된다. 
테이블은 다 저장되어있고 
테이블을 통해서 만들어진 VIEW는 쿼리문에 대한 결과를 가지고 있다. 실제 데이터를 가지고 있다는건 아니다. 
VIEW는 추가나 삭제가 어렵다. 


추가 기능
AUTO_INCREMENT
    -INT와 같은 정수 속성에 부여할 수 있는 제약 조건으로 DEFAULT값으로 매번
    튜플을 넣으 때마다 1씪 증가하도록 한다.
    - 중복을 피하기도 쉬우며, 관리하기 쉬워 자주 사용되는 제약조건이다.
    - 특히 ID와 같은 제약조건에서 자주 사용된다. 
IF( NOT) EXISTS
    -간혹 DB를 다름에 있어서 지난 정보가 있었는지 아니었는지 모를 경우가 있다.
    이럴 경우에는 그냥 작성할 경우에는 잘 작성 되거나 에러가 나게된다.ㅏ
    -이러한 경우 에러는 막으면서 없으면 만들어지길 바라는 식의 작석을 원한다면 다음과 같이 작성한다
    -CREATE DATABASE IF NOT EXISTS TEST;
    -TEST가없다면 TEST 가 만들어지지만 , 있다면 정상적으로 무시된다.


요구사항 분석
필요로 할 데이터들의 형태와 필요한 수준에 대해서 일반인이 이해할 수 있을 언어로 적은
요구사항을 받아와 분석한다.

    - 고객 정보(이름,전화번호,주소)를 저장한다.
    - 제품 정보(이름,가격,개수)를 저장하낟.
    - 이 두 정보를 이용하여 하나의 판매에 대한 정보를 저장한다.
    - 이 때 거래 상태와 거래일자에 대한 정보를 저장한다.
    - 거래 상태는 거래 상태가 변화함에 따라 수정될 수 있다.
다소 정확하지 않은 방식의 요구사항에 대해서 개발자는 필요한 정보를 추가 요구하거나 이에 
대한 분석결과를 내야한다. 


객체와 관계로 이루어졌다.
객체와 관계는 속성을 가진다. (관계는 속성을 가지지 않아도 된다. )
객체는 사각형으로 표현하고 관계는 마름모 꼴로 표현한다.
선을 통해 객체나 속성 관계를 연결한다.
타원형 속성이다.


요구사항 분석
요구사항 세부분석


논리적 데이터 모델